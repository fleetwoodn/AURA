@model AURA.ViewModels.PostPDFVM

@{
    Layout = null;
    ViewBag.Title = "PrintPDF";
    
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>PrintPDF</title>
    <style>
        .p {
            display: block;
            margin-top: 0px;
            margin-bottom: 0px;

        }
        .items {
            max-width: 65em;
            margin:5px;
            /*border-right-width:1px; 
            border-right-style:solid*/
        }

    </style>
</head>
<body style="max-width: 200mm;">

    <div style="float:left;">
        <img src="~/StaticImages/Ryne Logo.png" alt="image" />
        <p>212-787-2636 | info@ryne.co</p>
    </div>

    <h3 style="text-align:right;">JOB: @Model.OneZero</h3>

    <div style="text-align:right">

        <span>
            @Html.DisplayFor(model => model.OneStag) | @Html.DisplayFor(model => model.OneAgen)
        </span>
        <div>@Html.DisplayFor(model => model.OnePart)</div>
        <div>
            @Html.DisplayFor(model => model.OneTitl)
        </div>
        <div>
            <p></p>
        </div>
    </div>

    <div>
        <hr />
    </div>
    <hr />

    <div style="float:left">
        <span class="items"><strong>PICK-UP</strong></span>
        @foreach (var item in Model.PostFous)
        {
            @if (item.FouNote == null)
            {
                
            }
            else if (item.FouNote.Split("-")[0] == "PICK")
            {
                <div>
                    <span class="items" style="margin-right:1px; border-right-width:1px;">@Html.DisplayFor(modelItem => item.FouAddr)</span>
                    <span class="items" style="margin-left:0px">@Html.DisplayFor(modelItem => item.FouPost)</span>
                </div>
            }
            
        }

    </div>
    <div style="float:right">
        <span class="items"><strong>DROP-OFF</strong></span>
        @foreach (var item in Model.PostFous)
        {
            @if (item.FouNote == null)
            {
                
            }
            else if (item.FouNote.Split("-")[0] == "DROP")
            {
                <div>
                    <span class="items" style="margin-right:1px; border-right-width:1px;">@Html.DisplayFor(modelItem => item.FouAddr)</span>
                    <span class="items" style="margin-left:0px">@Html.DisplayFor(modelItem => item.FouPost)</span>
                </div>
            }
        }
    </div>

    @*<div>
            @foreach (var item in Model.PostFous)
            {
                @if (item.FouNote == "PICK")
                {
            <div style="float:left">
                <span class="items"><strong>PICK-UP</strong></span>
                <div>
                    <span class="items" style="margin-right:1px; border-right-width:1px;">@Html.DisplayFor(modelItem => item.FouAddr)</span>
                    <span class="items" style="margin-left:0px">@Html.DisplayFor(modelItem => item.FouPost)</span>
                </div>

            </div>
                }

                @if (item.FouNote == "DROP")
                {
                    <div style="float:right">
                        <span class="items"><strong>DROP-OFF</strong></span>
                        <div>
                            <span class="items" style="margin-right:0px">@Html.DisplayFor(modelItem => item.FouAddr)</span>
                            <span class="items" style="margin-left:0px">@Html.DisplayFor(modelItem => item.FouPost)</span>
                        </div>

                    </div>
                }

            }
        </div>*@

    @*LIST OF THR*@
    <hr style="clear:both" />
    <div style="background-color:lightblue">
        <span style="background-color:lightblue"><b>TIMEFRAMES</b></span>
    </div>
    @foreach (var item in Model.PostThrs)
    {
        <div>

            <span class="items">@Html.DisplayFor(modelItem => item.ThrDigit)</span>.
            <span class="items">@Html.DisplayFor(modelItem => item.ThrDate)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.ThrTime)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.ThrText)</span>
        </div>

    }
    @*list of fou*@
    <hr />
    <div style="background-color:lightblue">
        <span style="background-color:lightblue"><b>CONTACTS & LOCATIONS</b></span>
    </div>
    @foreach (var item in Model.PostFous)
    {
        <div style="float:left">

            <span class="items">@Html.DisplayFor(modelItem => item.FouDigit)</span>.
            <span class="items">@Html.DisplayFor(modelItem => item.FouName)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.FouPhon)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.FouEmai)</span>
        </div>
        <div>
            <span class="items">@Html.DisplayFor(modelItem => item.FouAddr)</span>/
            <span class="items">@Html.DisplayFor(modelItem => item.FouPost)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.FouOrg)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.FouNote)</span>
        </div>
    }

    @*list of sev*@
    <hr style="clear:both"/>
    <div style="background-color:lightblue">
        <span style="background-color:lightblue"><b>BILLING</b></span>
    </div>


    @foreach (var item in Model.PostSevs)
    {
        <div style="float:left;">


            <span class="items">@Html.DisplayFor(modelItem => item.SevInvo)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.SevDate)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.SevDesc)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.SevNote)</span>

            @*<div style="text-align:right">@Html.DisplayFor(modelItem => item.SevAmou)</div>*@
            @*<span>@Html.DisplayFor(modelItem => item.SevSign)</span><nbsp> </nbsp>|*@
            @*<span>@Html.DisplayFor(modelItem => item.SevNote)</span><nbsp> </nbsp>*@
        </div>
        <div style="text-align:right;">@Html.DisplayFor(modelItem => item.SevAmou)</div>
    }
    <div style="text-align:right;">
        <b>TOTAL BILLING: @ViewBag.bill</b>
    </div>
    <div style="text-align:right;">
        <b>----</b>
    </div>
    @foreach (var item in Model.PostSixs)
    {
        <div style="float:left;">
            <span class="items">@Html.DisplayFor(modelItem => item.SixDate)</span>|
            <span class="items">@Html.DisplayFor(modelItem => item.SixType)</span>
        </div>
        <div style="text-align:right;">@Html.DisplayFor(modelItem => item.SixAmou)</div>
    }
    <div style="text-align:right;">
        <b>TOTAL PAYMENTS: @ViewBag.paym</b>
    </div>
    <div style="text-align:right;">
        <b>----</b>
    </div>
    <div style="text-align:right;">
        <b>TOTAL DUE: @ViewBag.total</b>
    </div>

    @*list of fiv*@
    <hr />
    <div style="background-color:lightblue">
        <span style="background-color:lightblue"><b>REMARKS</b></span>
    </div>

    @foreach (var item in Model.PostFivs)
    {
        <div>

            <span class="items">@Html.DisplayFor(modelItem => item.FivDigit)</span>.
            <span class="items">@Html.DisplayFor(modelItem => item.FivPrio)</span>|
            <span class="items">@Html.DisplayFor(modelItem => item.FivCode)</span>|
            <span class="items">@Html.DisplayFor(modelItem => item.FivText)</span>
        </div>
    }

    @*list of eig*@
    <hr />
    <div style="background-color:lightblue">
        <span style="background-color:lightblue"><b>AGENTS</b></span>
    </div>

    @foreach (var item in Model.PostEigs)
    {
        <div>

            <span class="items">@Html.DisplayFor(modelItem => item.EigDigit)</span>.
            <span class="items">@Html.DisplayFor(modelItem => item.EigAgen)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.EigRole)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.EigLoad)</span>
            <span class="items">@Html.DisplayFor(modelItem => item.EigNote)</span>

        </div>
    }


    @*list of nin*@
    <hr />
    <div style="background-color:lightblue">

    </div>
    <div style="background-color:lightblue">
        <span style="background-color:lightblue"><b>AGREEMENT OF TERMS</b></span>
    </div>
    <p>BY SIGNING BELOW, YOU ARE AGREEING TO ALL OF THE TERMS LISTED IN THIS CONTRACT</p>

    <div>
        <p></p>
        <p></p>
    </div>
    <p></p>
    <p>_______________________________________________________________________________________</p>
    <hr />

    <div>
        <b>ESTIMATED BILLING</b>
        <p>
            The mileage is based on the route from the company base, to each location specified, and then back to the company base.
            Exceptions and exclusions can be made and must be specified in writing.
            Additional mileage costs may apply based on actual mileage traveled.
            Additional labor charges will apply to the total estimated amount if the hours estimate is exceeded.
        </p>
        <p></p>
        <b>BILLING AND PAYMENT</b>
        <p>
            The deposit is due at the signing of this document, and will hold the date and time for the job. This contract comes
            into force ONLY upon payment of the deposit.
        </p>
        <p>
            The card on file will be charged on the day of the job, before the job, for the total estimated amount still
            outstanding.
        </p>
        <p>
            After the job is completed, the lead agent on your move will discuss the total billing with the client and report back
            should any further billing be required. We will then bill or refund to your form of payment as required.
        </p>
        <p>
            If you have any questions, please feel free to ask.
        </p>
        <p></p>
        <b>CANCELLATION POLICY</b>
        <p>
            Client is subject to a full refund if they wish to cancel within 15 days of contracted date with written notice.
        </p>
        <p>
            If Ryne Corp. cancels the job due to unforseen circumstances, full deposit will be refunded to the original form of
            payment.
        </p>
        <p>
            Ryne may cancel a job without refunding the deposit in certain circumstances, including, but not limited to:
            <ul>
                <li>Breach of contract</li>
                <li>Incorrect inventory list</li>
                <li>Incorrect property address and/or description</li>
                <li>Fraudulent credit card</li>
                <li>Insurance requirements not met</li>
                <li>Speak and/or actions involving hate, racism or bigotry</li>
                <li>Verbal and/or physical abuse, including threats of violence</li>
                <li>Criminal activity of any kind</li>
                <li>Failure to properly or adequately communicate with Ryne about the job.</li>
            </ul>
        </p>
        <p></p>
        <b>GENERAL LIABILITY</b>
        <p>
            The Ryne Corporation will care for your possessions to the best of its ability while in our custody, and will take all
            available steps to avoid damage. However, in the event of damage to personal belongings while in our custody, the
            Ryne Corporation will NOT accept any liability for any said damage. Ryne may, at its discretion, attempt to help fix,
            mitigate, or replace items should the Ryne Corporation feel it is warranted.
        </p>
        <p></p>
        <b>INSURANCE</b>
        <p>
            Ryne carries general liability insurance. While this covers most issues, the subject property may require additional
            insurance requirements. Ryne will work with you and the subject property to meet any insurance requirement to the
            best of our ability. It is your responsibility to understand and disclose any and all insurance requirements required
            for successful completion of the job.
        </p>
        <p></p>
    </div>

</body>
</html>
